pipeline:
  name: harness-tf-akamai-pipeline
  identifier: harnesstfakamaipipeline
  projectIdentifier: default_project
  orgIdentifier: default
  tags: {}
  properties:
    ci:
      codebase:
        connectorRef: harnessgithubconnector
        build: <+input>
  stages:
    - stage:
        name: build_stage
        identifier: build_stage
        description: ""
        type: CI
        spec:
          cloneCodebase: true
          platform:
            os: Linux
            arch: Amd64
          runtime:
            type: Cloud
            spec: {}
          execution:
            steps:
              - stepGroup:
                  name: group_0
                  identifier: group_0
                  steps:
                    - step:
                        type: Run
                        name: Run_1
                        identifier: Run_1
                        spec:
                          shell: Sh
                          command: |-
                            git log
                            opstatus=OKAY
                          outputVariables:
                            - name: opstatus
    - stage:
        name: tf-docker
        identifier: tfdocker
        description: ""
        type: Custom
        spec:
          execution:
            steps:
              - stepGroup:
                  name: tf-step-group
                  identifier: tfstepgroup
                  steps:
                    - step:
                        type: ShellScript
                        name: ShellScript
                        identifier: ShellScript
                        spec:
                          shell: Bash
                          executionTarget: {}
                          source:
                            type: Inline
                            spec:
                              script: |-
                                echo "internal/prd/customer-success"
                                echo <+pipeline.stages.build_stage.spec.execution.steps.group_0.steps.Run_1.output.outputVariables.opstatus>
                                tfc_workspace="path/to/workspace"
                          environmentVariables: []
                          outputVariables:
                            - name: tfc_workspace
                              type: String
                              value: tfc_workspace
                        timeout: 10m
                    - step:
                        type: TerraformCloudRun
                        name: TerraformCloudRun
                        identifier: TerraformCloudRun
                        spec:
                          runType: PlanOnly
                          runMessage: ""
                          spec:
                            organization: tfc-demo-org
                            workspace: ws-1RkJ5jcKnZgxQftd
                            variables: []
                            discardPendingRuns: true
                            targets: []
                            connectorRef: tfcharnessconnecter
                            provisionerIdentifier: _tfc_run
                            planType: Apply
                            exportTerraformPlanJson: true
                            terraformVersion: 1.8.1
                        timeout: 10m
        tags: {}
